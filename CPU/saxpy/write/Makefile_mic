CXX=icpc  -openmp
CXXFLAGS = -O3 -mmic 
#CXXFLAGS+=-no-opt-prefetch

ISPC=ispc
ISPCFLAGS =  -O3 --target=generic-16 --c++-include-file=../knc-i1x16.h
ISPCFLAGS+= --opt=force-aligned-memory

ARCH=mic
all: write_$(ARCH) $(ARCH)/write_ispc.s

write_$(ARCH): $(ARCH)/write_ispc.o write.cpp params.h
	$(CXX) $(CXXFLAGS)  -o $@ $^ -g

$(ARCH)/write_ispc.o: $(ARCH)/write_ispc.s
	$(CXX) $(CXXFLAGS) -c -o $@ $<

$(ARCH)/write_ispc.s: $(ARCH)/write_ispc.zmm.cpp
	if [ -f write_ispc_mic.s ]; then cp write_ispc_mic.s $@; else 	$(CXX) $(CXXFLAGS) -S -o $@ $<; fi

$(ARCH)/write_ispc.zmm.cpp: write.ispc params.h
	mkdir -p $(ARCH)
	$(ISPC) $(ISPCFLAGS) --emit-c++ -o $@ $<

run_compact: all
	MIC_KMP_AFFINITY=compact micrun ./write_$(ARCH) 1024000 1
	MIC_KMP_AFFINITY=compact micrun ./write_$(ARCH) 1024000 2
	MIC_KMP_AFFINITY=compact micrun ./write_$(ARCH) 1024000 4

run_scatter: all
	MIC_KMP_AFFINITY=scatter micrun ./write_$(ARCH) 1024000 1
	MIC_KMP_AFFINITY=scatter micrun ./write_$(ARCH) 1024000 2
	MIC_KMP_AFFINITY=scatter micrun ./write_$(ARCH) 1024000 4

clean:
	/bin/rm -rf write_$(ARCH)  $(ARCH)

clean_all:
	/bin/rm -rf write_$(ARCH) $(ARCH) *~
